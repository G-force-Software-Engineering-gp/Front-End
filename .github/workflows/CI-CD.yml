name: CI/CD

on:
  #   push:
  #     branches: ['main']
  #   pull_request:
  #     branches: ['main']
  push:
    branches: ['main', 'develop']
  pull_request:
    branches: ['main', 'develop']

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      # -
      #   name: Upgrade NPM
      #   run: npm install -g npm
      - run: npm i fsevents@latest -f --save-optional
      #   - name: Install dependencies

      # run: npm install
      #     run: npm ci
      - name: clean cache
        run: npm cache clean --force
      - name: Setup CI env
        run: npm ci
      - name: Install dependencies
        run: npm install
      - name: Build project
        env:
          CI: false
        run: npm run build --if-present
      # -
      #   name: Install jsdom
      #   run: npm install jsdom --force
    #   - name: Test project
    #     run: npm run test --if-present

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: remove unneccessary config files
        run: find . -type f \( -name "docker-compose.yml" -o -name ".dockerignore" -o -name "Dockerfile" \) -exec rm -f {} +
      - name: update server & deliver last version
        env:
          LIARA_TOKEN: ${{ secrets.LIARA_API_TOKEN }}
        run: |
          npm i -g @liara/cli@5
          liara deploy --app="gforce" --api-token="$LIARA_TOKEN" --no-app-logs

#   publish:
#     needs: build_and_test

#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           push: true
#           tags: aryansabet/gforcefrontend:latest

#   deploy:
#     needs: publish

#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       # ## with ssh-private-key ##
#       # -
#       #   name: Set up SSH
#       #   uses: webfactory/ssh-agent@v0.7.0
#       #   with:
#       #     ssh-private-key: ${{ secrets.SSH_KEY }}
#       # -
#       #   name: Set up on server
#       #   run: |
#       #     ssh -o StrictHostKeyChecking=no -i ${{ env.SSH_AUTH_SOCK }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "sudo docker ps -q | xargs sudo docker stop | xargs sudo docker rm && sudo docker pull aryansabet/gforcefronend:latest && sudo docker run -d -p 80:80 aryansabet/gforcefronend:latest && sudo docker images | grep "aryansabet/gforcefronend"  | awk '{ print $3 }' | xargs docker rmi"
#       #   #ssh -o StrictHostKeyChecking=no -i ${{ env.SSH_AUTH_SOCK }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "sudo docker ps | sudo grep "aryansabet/gforcefronend" | sudo awk '{print $1}' | xargs -I {} sudo docker stop {} | xargs sudo docker rm && sudo docker pull aryansabet/gforcefronend:latest && sudo docker run -d -p 80:80 aryansabet/gforcefronend:latest && sudo docker images | grep "aryansabet/gforcefronend"  | awk '{ print $3 }' | xargs docker rmi"
#       #     # shell: bash
#       #     # env:
#       #     #   SSH_AUTH_SOCK: /tmp/ssh_agent.sock # Default ssh-agent socket
#       #     #   SSH_AUTH_SOCK: ${{ secrets.SSH_KEY }}
#       #     #   SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
#       #     #   SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
#       #     #   SSH_KEY_PATH: ${{ github.workspace }}/../private.key

#       ## with password ##
#       # https://github.com/appleboy/ssh-action
#       - name: Set up on server
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USERNAME }}
#           password: ${{ secrets.PASSWORD }}
#           port: ${{ secrets.PORT }}
#           script: |
#             sudo docker ps | sudo grep "aryansabet/gforcefronend" | sudo awk '{print $1}' | xargs -I {} sudo docker stop {} | xargs sudo docker rm
#             sudo docker images | grep "aryansabet/gforcefronend"  | awk '{ print $3 }' | xargs docker rmi
#             sudo docker pull aryansabet/gforcefronend:latest
#             sudo docker run -d -p 80:80 aryansabet/gforcefronend:latest

#           # sudo docker ps -q | xargs sudo docker stop | xargs sudo docker rm
#           # sudo docker images | grep "aryansabet/gforcefronend"  | awk '{ print $3 }' | xargs docker rmi
#           # sudo docker pull aryansabet/gforcefronend:latest
#           # sudo docker run -d -p 80:80 aryansabet/gforcefronend:latest
